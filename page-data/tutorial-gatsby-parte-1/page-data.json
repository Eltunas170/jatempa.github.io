{"componentChunkName":"component---src-templates-blog-post-js","path":"/tutorial-gatsby-parte-1/","result":{"data":{"site":{"siteMetadata":{"title":"Mi primer blog","author":"@gatsbyjs"}},"markdownRemark":{"id":"25b1eee5-9d27-5555-8342-0f8f22a30b5f","excerpt":"Introducción Durante los últimos fines de semana algunos miembros de la comunidad de Mexicali Open Source nos reunimos en las instalaciones de La Playa Delux…","html":"<h3>Introducción</h3>\n<p>Durante los últimos fines de semana algunos miembros de la comunidad de Mexicali Open Source nos reunimos en las instalaciones de <a href=\"https://www.facebook.com/LaPlayaDeLux/\">La Playa Delux Coworking</a> con el objetivo de conocer e implementar los conceptos básicos de la herramienta de desarrollo ágil para sitios estáticos <a href=\"https://www.gatsbyjs.org/\">Gatsby</a>.</p>\n<p><img src=\"../assets/reunion.jpg\" alt=\"Taller de Gatsby\"></p>\n<p>Gatsby es una herramienta muy potente basada en <a href=\"https://reactjs.org/\">ReactJS</a> (librería desarrollada e implementada por Facebook para construir interfaces gráficas). Si estas comenzando o quieres aprender ReactJS, inclusive puedes utilizar Gatsby como medio para este propósito. </p>\n<p>Por otra parte, Gatsby cuenta con una gama de diversos tipos de <em>plugins</em> (librerías que proveen funcionalidad particular) para extender su funcionalidad. Una de las principales fortalezas de Gatsby esta en su flexibilidad para el manejo de diferentes fuentes de datos, es decir, las fuentes de datos pueden proveenir de diferentes tipos de archivos tales como: CSV, JSON, YAML, Documento de Google entre otros.</p>\n<p>En esta serie de publicaciones describiremos el proceso de desarrollo de sitios estáticos con Gatsby. Para fines del tutorial, cabe mencionar que el entorno de desarrollo utilizado fue el siguiente:</p>\n<ol>\n<li>Sistema Operativo de Linux Ubuntu versión <em>18.04</em>.</li>\n<li>NodeJS versión <em>10.15.3</em>.</li>\n</ol>\n<h3>Instalación de NodeJS</h3>\n<p>Para comenzar con Gatsby, es importante contar con una versión reciente o posterior a la <em><strong>8.x</strong></em> de <a href=\"https://nodejs.org\">NodeJS</a> en nuestro Sistema Operativo. </p>\n<p>Para la instalación de NodeJS <a href=\"https://linux4one.com/how-to-install-node-js-with-npm-on-ubuntu-18-04/\">[1]</a> necesitamos agregar a la lista lista de repositorios, un enlace a la fuente que contenga una versión reciente del mismo.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">curl</span> -sL https://deb.nodesource.com/setup_10.x <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">bash</span> -</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Después, actualizamos los repositorios locales con el siguiente comando.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update <span class=\"token punctuation\">;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Procedemos entonces con la instalación de NodeJS y el gestor de paquetes NPM.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> nodejs <span class=\"token function\">npm</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Para validar dicha instalación, ejecutamos los siguientes comandos respectivamente.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ node -v\n$ <span class=\"token function\">npm</span> -v</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>Instalación de Gatsby</h3>\n<p>Antes de comenzar con la instalación, cabe destacar que es altamente recomendado utilizar el gestor de paquetes NPM como usuario regular, es decir, sin especificar el famoso comando <em><strong>sudo</strong></em> el cuál nos otorgá privilegios de <em>super usuario</em>. Para este último propósito, podemos seguir los pasos recomendados en <a href=\"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally\">[2]</a> y a continuación descritos.</p>\n<ol>\n<li>El primer paso, consiste en crear un directorio oculto en el directorio HOME de nuestro sistema.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$  <span class=\"token function\">mkdir</span> ~/.npm-global</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ol start=\"2\">\n<li>Después debemos exportar la variable de entorno que apunte al directorio creado anteriormente.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span>~/.npm-global/bin:<span class=\"token environment constant\">$PATH</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ol start=\"3\">\n<li>Enseguida debemos actualizar las variables del sistema con el siguiente comando.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">source</span> ~/.profile</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ol start=\"4\">\n<li>Por último, para la instalación del intérprete de comandos de Gatsby ejecutamos la siguiente instrucción.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g gatsby-cli</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>El prefijo <code class=\"language-text\">-g</code> permite contar con el intérprete de comandos de Gatsby de forma global, es decir, lo podemos ejecutar desde cualquier ubicación del sistema a través de nuestra Terminal.</p>\n<h3>Crear un sitio con Gatsby</h3>\n<p>Para crear un nuevo sitio <a href=\"https://www.gatsbyjs.org/docs/quick-start\">[3]</a>, ejecuta el siguiente comando.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ gatsby new blog</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Cámbiate al directorio de tú sitio, es decir, <code class=\"language-text\">blog</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">cd</span> blog</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Ejecuta el servicio de Gatsby en modo de desarrollo ejecutando la siguiente instrucción.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ gatsby develop</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Posteriormente, accede a la siguiente dirección <code class=\"language-text\">http://localhost:8000/</code> desde tú navegador web para observar el siguiente resultado.</p>\n<p><img src=\"../assets/initial_gatsby.png\" alt=\"Welcome to Gatsby\"></p>\n<p>Si todo ha ido bien, a partir de este momento ya podemos desarrollar páginas para nuestro sitio.</p>\n<h3>¿Como crear una nueva página?</h3>\n<p>Para crear una nueva página, agregaremos un archivo llamado <code class=\"language-text\">new-page.js</code> dentro de la carpeta <code class=\"language-text\">blog/src/pages</code> con el siguiente contenido:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">NewPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hola desde una nueva página</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NewPage</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Al acceder a la siguiente ruta <code class=\"language-text\">http://localhost:8000/new-page</code> el resultado debe ser similar al siguiente.</p>\n<p><img src=\"../assets/new-page.png\" alt=\"New Page\"></p>\n<p>Como puedes observar, no fue necesario establecer mecanismos para el enrutamiento o direccionamiento hacia nuestra nueva página. Esto es  parte del potencial que ofrece Gatsby para el desarrollo ágil.</p>\n<p>Por otro lado, sin notarlo ya hemos interactuado con componentes de ReactJS, ya que precisamente esto es lo que hemos desarrollado <em><strong>¡un componente!</strong></em>, que posteriormente fue procesado y traducido a una página HTML por parte de Gatsby.</p>\n<p>Sin embargo, no se parece mucho a la página ubicada en la raíz del sitio, ¿cierto?, esto es debido a que su contenido no incluye la plantilla de diseño predeterminada. </p>\n<p>Para realizar este ajuste, solo debemos importar la plantilla predeterminada a nuestro archivo <code class=\"language-text\">new-page.js</code>, como se muestra a continuación.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber 0\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> Layout <span class=\"token keyword\">from</span> <span class=\"token string\">\"../components/layout\"</span></span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">NewPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span></span><span class=\"token plain-text\">    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hola desde una nueva página</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"></span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token plain-text\">  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NewPage</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Gracias a que Gatsby cuenta con <em><strong>hot-reloading</strong></em> (mecanismo que construye el sitio en segundo plano evitando tener que refrescar el navegador) solo necesitamos regresar al navegador y observar la actualización realizada, como se muestra a continuación.</p>\n<p><img src=\"../assets/new-page-with-template-animation.gif\" alt=\"New page with default template\"></p>\n<h3>Conclusiones</h3>\n<p>En esta primer entrega, hemos destacado algunos aspectos básicos de la herramienta de desarrollo ágil para sitios estáticos Gatsby. Además fue descrito el proceso de instalación del intérprete de comandos y para finalizar se mostro la facilidad con la que se pueden construir nuevas páginas a través de un ejemplo.</p>\n<h3>Referencias</h3>\n<ol>\n<li><a href=\"https://linux4one.com/how-to-install-node-js-with-npm-on-ubuntu-18-04/\">How to install Node.js with npm on Ubuntu 18.04</a></li>\n<li><a href=\"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally\">Resolving EACCES permissions errors when installing packages globally</a></li>\n<li><a href=\"https://www.gatsbyjs.org/docs/quick-start\">Gatsby Quick Start</a></li>\n</ol>","frontmatter":{"title":"Introducción al desarrollo de sitios estáticos con Gatsby - Parte 1","date":"April 20, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorial-gatsby-parte-1/","previous":{"fields":{"slug":"/como-conoci-mxlos/"},"frontmatter":{"title":"Como conocí a la comunidad de Mexicali Open Source"}},"next":null}}}